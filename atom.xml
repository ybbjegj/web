<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[guoml的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-07-14T09:12:23.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[日月王里]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[巧妙的实现短字符串中的字母是否都包含在长字符串中]]></title>
    <link href="http://yoursite.com/2015/07/14/str-include/"/>
    <id>http://yoursite.com/2015/07/14/str-include/</id>
    <published>2015-07-14T08:16:43.000Z</published>
    <updated>2015-07-14T09:12:23.000Z</updated>
    <content type="html"><![CDATA[<p>参考 <a href="http://kb.cnblogs.com/page/150578/" target="_blank" rel="external">博客园</a></p>
<p>假设这有一个各种字母组成的字符串，假设这还有另外一个字符串，而且这个字符串里的字母数相对少一些。从算法上讲，什么方法能最快的查出所有小字符串里的字母在大字符串里都有？</p>
<p>比如，如果是下面两个字符串：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">'ABCDEFGHLMNOPQRS'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">'DCGSRQPOM'</span>;</span><br></pre></td></tr></table></figure>
<p>答案是true，所有在str2里的字母str1也都有。</p>
<p>如果是下面两个字符串的话：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">'ABCDEFGHLMNOPQRS'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">'DCGSRQPOZ'</span>; <span class="comment">//多出来一个Z</span></span><br></pre></td></tr></table></figure>
<p>答案是false，因为第二个字符串里的Z字母不在第一个字符串里。</p>
<p>相信这个对于做开发的来说，要实现这样的function，并不是什么难事。</p>
<h3 id="常规算法">常规算法</h3><p>1.轮询短字符串的所有字母，看是否在长字符串中。算法复杂度是o(n*m)。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">longStr,shortStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> find = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len = shortStr.length;i &lt; len;i++) &#123;</span><br><span class="line">        find = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>,len1 = longStr.length; j &lt; len1; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(longStr[i] === shortStr[j])&#123;</span><br><span class="line">                find = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!find) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> find;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.先排序，再查找。算法复杂度：排序+O(m+n)。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">longStr,shortStr</span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> a = shortStr.split(<span class="string">''</span>).sort(),</span><br><span class="line">        b = longStr.split(<span class="string">''</span>).sort();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,j = <span class="number">0</span>, len = a.length, len1 = b.length; i &lt; len &amp;&amp; j &lt; len1)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == b[j]) &#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(a[i] &gt; b[j])&#123;</span><br><span class="line">            ++j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ++i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> i == len ? <span class="literal">true</span> <span class="literal">false</span>;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>使用HashTable 算法复杂度O(m+n)。</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">longStr,shortStr</span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> hash = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len = longStr.length; i &lt; len; i++)&#123;</span><br><span class="line">        hash[longStr[i]] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len = shortStr.length; i &lt; len; i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!(shortStr[i] <span class="keyword">in</span> hash))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4.奇技淫巧，算法复杂度O(m+n)。</p>
<p>给每个字母分配一个素数，从2开始，往后类推。这样A将会是2，B将会是3，C将会是5，等等。现在我遍历第一个字串，把每个字母代表的素数相乘。然后——轮询第二个字符串，用每个字母除它。如果除的结果有余数，这说明有不匹配的字母。如果整个过程中没有余数，你应该知道它是第一个字串恰好的子集了。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params">longStr,shortStr</span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//26字目代表的素数</span></span><br><span class="line">    <span class="keyword">var</span> hash = &#123;</span><br><span class="line">        A:<span class="number">2</span>,</span><br><span class="line">        B:<span class="number">3</span>, </span><br><span class="line">        .... </span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> sum1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>,len = longStr.length; i &lt; len; i++) &#123;</span><br><span class="line">        sum1 *= hash[longStr[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>,len = shortStr.length; i &lt; len; i++) &#123;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span>(sum1 % hash[shortStr[i]] !== <span class="number">0</span>)&#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>参考 <a href="http://kb.cnblogs.com/page/150578/" target="_blank" rel="external">博客园</a></p>
<p>假设这有一个各种字母组成的字符串，假设这还有另外一个字符串，而且这个字符串里的字母数相]]>
    </summary>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="js" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这就是我]]></title>
    <link href="http://yoursite.com/2015/07/14/me/"/>
    <id>http://yoursite.com/2015/07/14/me/</id>
    <published>2015-07-14T07:12:46.000Z</published>
    <updated>2015-07-14T09:16:22.000Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="Me" scheme="http://yoursite.com/tags/Me/"/>
    
  </entry>
  
</feed>